#summary A 3-axis CNC mill conversion from Anilam 3300 controls to EMC2

=3300 mill conversion=

<wiki:toc max_depth="2" />

=Introduction=

After the successful [ProjectSheetCake conversion] of our 1100 mill to EMC2 at [http://sector67.org Sector67] (and integration of a [FourthStepperAxis fourth-axis rotary table]), we are now tackling a conversion of our exsiting Anilam 3300 mill to EMC2 as well.  This page documents that effort.

=Sponsorship=
This conversion project has been sponsored by [http://compcc.com Comprehensive Computer Consulting].

In addition, this project would not be possible without significant volunteer effort from members of Sector67 and attendees of the EMC2 integrator's class, which used this project for various laboratory exercises.

=TODOs=
This project is still just beginning.  We have acquired much of the necessary hardware.  Remaining tasks include:

  * Video of this mill functioning so that when we extract the Anilam controls they can be sold (done 1/25/2012), thanks Chris!).
  * Design and testing of the 24V estop circuit (started but needs more work and verification)
  * Design and implementation of the limit switch/estop interface daughter board
  * Design and implementation of the 24V fan interface daughter board
  * Get an aluminium plate to mount all of the daughter boards, including the Mesa and other boards, and drill appropriate mounting holes for the standoffs (done 1/25/2012).
  * Cut and wire the encoders to the Mesa servo daughter board
  * Cut and wire the servo amps to the Mesa servo daughter board
  * Wire the limits and fans and servo enable 
  * Determine a location for the PC and put it there.

Once these tasks are complete and the mill is basically functional, we can leverage much of the work on the increasingly misnamed 1100 mill for the EMC2 configuration.

= Build Log =
== 2/9/2012 ==

We made great progress last night during the first half of the mill conversion hackathon.  Scott S dis a great job cleaning out the workspace around the mill control box, and then got straight to work identifying and converting the quadrature TTL-level encoder signals coming from the motors and the +5/GND supply needed to drive the encoders.  Once the X axis was wired to the Mesa servo daughter card we were able build a sample starting configuration using pncconf and see correct movement in the open loop configuration for the axis.

Scott H pulled down LinuxCNC 2.4.7 from the repository to avoid some pncconf bugs.

Brett U and Larry W provided technical assistance confirming proper operation of the encoder signals.  In the mean time Scott H worked on the design and soldering of the I/O integration board, which is the circuit board to integrate LinuxCNC and the relays with the limit and estop switches.

After the encoders for all three axes were wired and confirmed functional, we took a breather to re-group, and then tackled getting the motors to move under LinuxCNC control.  We re-used the existing Anilam servo enable functions to enable power to the drive (rather than hard-coding power, which would take away estop and limit safety).

We tested each axis individually under open loop control to determine which of them needed to be inverted.  After confirming open loop control, we then enabled basic PID control and started a full-blown LinuxCNC instance.  By the end of the session, we had three-axis coordinated motion working.  Some minor problems:

  * Following error needed to be tweaked higher by default.  We need to go back and revisit the PID tuning to resolve this.

  * I had "worked ahead" and defined I/O pins for limits and estop, but since we did not have that board, the maching would not enable (it thought it was on a limit switch), so they had to be removed.

Work we will hopefully accomplish on Sunday 2/12/2012 (noon-5):

  * Fix the shielding on the incoming encoder cables.  This should go to case ground, not ground on the servo card.  We'll want to put a P clamp over the bundle of incoming shielded cables and run that to the star ground.
  * Test the new I/O integration board out of the mill.
  * Implement the I/O integration board in the mill.
  * Remove the existing I/O integration board and extraneous power supplies.
  * Drill mounting holes in the new I/O integration board to match the existing mounting screws
  * Figure out of the servo inhibit wires are going to cause us a problem.  This would be easiest if we can find a data sheet for the servo amps.
  * Wire and confirm the fans are working (check to see if one fan comes on with servo enable and one runs all the time)
  * Install the new monitor, keyboard and mouse on the PC arm
  * Secure the monitor, keyboard and mouse wiring to the arm
  * Wire the ethernet cord to the ceiling
  * Remove the existing large cable PC plug
  * Make longer 50 pin twisted cables and route them through the former large cable plug hole.
  * Create and integrate the servo reset pulse circuit (can copy from the 1100 mill)
  * Make some chips using LinuxCNC!

==2/12/2012==
Another 5 solid hours of build work on the 3300 mill.  Larry W and Scott H got the I/O integration board debugged, tested externally, integrated into LinuxCNC and finally integrated into the overall mill.  With a few minor debugging tangents, it worked exactly as planned.  The integration board, when soldered properly (ha!) works as expected, and, copying the classic ladder 2 second servo reset pulse generator from the 1100 mill we were able to get machine enable working from LinuxCNC.

This is all great news, and after getting the mill working we were able to remove the existing Anilam integration board and 5 and 15V power supplies.  We ran out of time and ended up leaving the machine mid-operation, with some components and wiring still yet to remove and some yet to clean up properly.  The TODOs are:

  * Determine where the PC will ultimately live
  * Make longer 50-pin ribbon cables
  * Remove the large cable plug and all wires hooked to it
  * Wire the internal 24V power supply to the integration board instead of our bench supply.
  * Wire the 120V fans to power
  

It turns out that if the servo inhibit wires are left to float that they do not inhibit the drivers, although we were not able to find any data sheets for the Anilam servo amplifiers.